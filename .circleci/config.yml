# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  docker: circleci/docker@2.1.4

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: APP_DOCKER_USERNAME # get from context env
          docker-password: APP_DOCKER_PASSWORD # get from context env
      - docker/build:
          image: $APP_DOCKER_IMAGE
          tag: $APP_DOCKER_TAG
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $APP_DOCKER_IMAGE
          tag: $APP_DOCKER_TAG
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       # Find a cache corresponding to this specific package.json checksum
      #       # when this file is changed, this key will fail
      #       - v1-dependencies-{{ checksum "package-lock.json" }}
      #       # Find the most recently generated cache used from any branch
      #       - v1-dependencies-

      # - run:
      #     name: Install Dependencies
      #     command: npm install

      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package-lock.json" }}

      # - run:
      #     name: Run Build
      #     command: npm run build
  deploy:
    executor: docker/docker
    steps:
      - add_ssh_keys:
          fingerprints:
            - "$APP_SSH_FINGERPRINT"
      - run:
          name: Deploy to EC2
          no_output_timeout: "30m"
          command: |
            ssh -o StrictHostKeyChecking=no -v $APP_DEPLOYED_USER@$APP_HOST_NAME
            chmod -R 777 .
            './deploy.sh'
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  pipelines:
    jobs:
      - build:
          context: pm-tool-api-context
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
